mutation createAplicacion($input: CreateAplicacionInput!) {
  createAplicacion(input: $input) {
    aplicacion {
      id
      createdAt
    }
  }
}

mutation updateApp($id: ID!, $input: UpdateAplicacionInput!) {
  updateAplicacion(id: $id, input: $input) {
    aplicacion {
      id
      updatedAt
      nombre
      descripcion
    }
  }
}

mutation deleteGrupo($id: ID!) {
  deleteGrupo(id: $id) {
    deletedId
    found
  }
}

mutation createPermiso($input: CreatePermisoInput!) {
  createPermiso(input: $input) {
    permiso {
      id
      createdAt
    }
  }
}

mutation deletePermiso($id: ID!) {
  deletePermiso(id: $id) {
    found
    deletedId
  }
}

mutation updatePermiso($id: ID!, $input: UpdatePermisoInput!) {
  updatePermiso(id: $id, input: $input) {
    permiso {
      id
      createdAt
    }
  }
}

mutation createRol($input: CreateGrupoInput!) {
  createGrupo(input: $input) {
    grupo {
      id
      createdAt
    }
  }
}

mutation updateGrupo($id: ID!, $input: UpdateGrupoInput!) {
  updateGrupo(id: $id, input: $input) {
    grupo {
      id
      createdAt
    }
  }
}

mutation createUsuario($input: CreateUsuarioInput!) {
  createUsuario(input: $input) {
    usuario {
      id
      createdAt
    }
  }
}

mutation delete($id: ID!) {
  deleteUsuario(id: $id) {
    found
    deletedId
  }
}

mutation updateUsuario($id: ID!, $input: UpdateUsuarioInput!) {
  updateUsuario(id: $id, input: $input) {
    usuario {
      id
      createdAt
    }
  }
}

mutation setPassword(
  $token: String!
  $newPassword1: String!
  $newPassword2: String!
) {
  setPassword(
    token: $token
    newPassword1: $newPassword1
    newPassword2: $newPassword2
  ) {
    success
    errors
  }
}

mutation verificarCuenta($token: String!) {
  verifyAccount(token: $token) {
    success
    errors
  }
}

mutation verificarToken($token: String!) {
  verifyToken(token: $token) {
    payload
    success
    errors
  }
}

mutation changePassword(
  $oldPassword: String!
  $newPassword1: String!
  $newPassword2: String!
) {
  changePassowrd(
    oldPassword: $oldPassword
    newPassword1: $newPassword1
    newPassword2: $newPassword2
  ) {
    success
    errors
    refreshToken
    token
  }
}
